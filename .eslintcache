[{"D:\\Programming\\Java\\langbook-ui\\src\\index.js":"1","D:\\Programming\\Java\\langbook-ui\\src\\App.js":"2","D:\\Programming\\Java\\langbook-ui\\src\\api\\noteApi.js":"3","D:\\Programming\\Java\\langbook-ui\\src\\api\\apiUtils.js":"4","D:\\Programming\\Java\\langbook-ui\\src\\state\\store.js":"5","D:\\Programming\\Java\\langbook-ui\\src\\state\\notes\\thunks.js":"6","D:\\Programming\\Java\\langbook-ui\\src\\state\\notes\\selectors.js":"7","D:\\Programming\\Java\\langbook-ui\\src\\state\\notes\\notesSlice.js":"8","D:\\Programming\\Java\\langbook-ui\\src\\state\\initialState.js":"9","D:\\Programming\\Java\\langbook-ui\\src\\pages\\notes\\NotePage.js":"10","D:\\Programming\\Java\\langbook-ui\\src\\pages\\notes\\navigation\\NoteNavigation.js":"11","D:\\Programming\\Java\\langbook-ui\\src\\pages\\notes\\content\\NoteSection.js":"12","D:\\Programming\\Java\\langbook-ui\\src\\pages\\notes\\navigation\\NoteNavigationItem.js":"13","D:\\Programming\\Java\\langbook-ui\\src\\pages\\notes\\content\\NoteModal.js":"14","D:\\Programming\\Java\\langbook-ui\\src\\pages\\notes\\navigation\\NoteNavigationTree.js":"15"},{"size":404,"mtime":1624621919196,"results":"16","hashOfConfig":"17"},{"size":682,"mtime":1624621919195,"results":"18","hashOfConfig":"17"},{"size":932,"mtime":1624625312355,"results":"19","hashOfConfig":"17"},{"size":603,"mtime":1616531929710,"results":"20","hashOfConfig":"17"},{"size":290,"mtime":1619351307638,"results":"21","hashOfConfig":"17"},{"size":923,"mtime":1624625332754,"results":"22","hashOfConfig":"17"},{"size":1447,"mtime":1624621919199,"results":"23","hashOfConfig":"17"},{"size":4387,"mtime":1624627176542,"results":"24","hashOfConfig":"17"},{"size":7299,"mtime":1624621919198,"results":"25","hashOfConfig":"17"},{"size":2076,"mtime":1624621919196,"results":"26","hashOfConfig":"17"},{"size":2493,"mtime":1624621919197,"results":"27","hashOfConfig":"17"},{"size":3704,"mtime":1624621919197,"results":"28","hashOfConfig":"17"},{"size":3143,"mtime":1624621919198,"results":"29","hashOfConfig":"17"},{"size":680,"mtime":1616616730433,"results":"30","hashOfConfig":"17"},{"size":1944,"mtime":1624627142460,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1mcudw",{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Programming\\Java\\langbook-ui\\src\\index.js",[],["67","68"],"D:\\Programming\\Java\\langbook-ui\\src\\App.js",["69","70"],"import React, { useEffect } from \"react\";\r\nimport NotePage from \"./pages/notes/NotePage\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\n// import { getNotes } from \"./state/notes/thunks\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <header />\r\n        <Switch>\r\n          <Route\r\n            exact\r\n            path={[\r\n              \"/\",\r\n              \"/categories/:selectedCategoryId/notes/:selectedNoteId\",\r\n            ]}\r\n          >\r\n            <NotePage />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\Programming\\Java\\langbook-ui\\src\\api\\noteApi.js",[],"D:\\Programming\\Java\\langbook-ui\\src\\api\\apiUtils.js",[],"D:\\Programming\\Java\\langbook-ui\\src\\state\\store.js",[],"D:\\Programming\\Java\\langbook-ui\\src\\state\\notes\\thunks.js",["71","72","73"],"D:\\Programming\\Java\\langbook-ui\\src\\state\\notes\\selectors.js",[],"D:\\Programming\\Java\\langbook-ui\\src\\state\\notes\\notesSlice.js",[],"D:\\Programming\\Java\\langbook-ui\\src\\state\\initialState.js",[],"D:\\Programming\\Java\\langbook-ui\\src\\pages\\notes\\NotePage.js",["74"],"import React, { useEffect } from \"react\";\r\nimport NoteNavigation from \"./navigation/NoteNavigation\";\r\nimport NoteSection from \"./content/NoteSection\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect, useParams, useLocation } from \"react-router-dom\";\r\nimport {\r\n  firstToShowCategorySelector,\r\n  firstToShowNoteSelector,\r\n  hasNotesSelector,\r\n  isNotesLoadedSelector,\r\n  noteSelector,\r\n} from \"../../state/notes/selectors\";\r\nimport { noteExpanded } from \"../../state/notes/notesSlice\";\r\nimport { getNotes } from \"../../state/notes/thunks\";\r\n\r\nfunction NotePage() {\r\n  const { pathname } = useLocation();\r\n  const { selectedNoteId, selectedCategoryId } = useParams();\r\n  const isNotesLoaded = useSelector(isNotesLoadedSelector);\r\n  const hasNotes = useSelector(hasNotesSelector);\r\n  const note = useSelector(noteSelector(selectedNoteId));\r\n  const firstToShowCategoryId = useSelector(firstToShowCategorySelector);\r\n  const firstToShowNoteId = useSelector(firstToShowNoteSelector);\r\n  const dispatch = useDispatch();\r\n  const hasLoadedNotes = isNotesLoaded && hasNotes;\r\n  const noteExists = note !== undefined;\r\n\r\n  useEffect(() => {\r\n    if (isNotesLoaded && noteExists) {\r\n      dispatch(noteExpanded(note.data.parentId));\r\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [noteExists, isNotesLoaded]);\r\n\r\n  useEffect(() => {\r\n    if (firstToShowCategoryId) {\r\n      dispatch(getNotes(firstToShowCategoryId));\r\n    }\r\n  }, [dispatch, selectedCategoryId]);\r\n\r\n  if (pathname === \"/\") {\r\n    if (isNotesLoaded && hasNotes) {\r\n      return (\r\n        <Redirect\r\n          to={\r\n            \"/categories/\" +\r\n            firstToShowCategoryId +\r\n            \"/notes/\" +\r\n            firstToShowNoteId\r\n          }\r\n        />\r\n      );\r\n    }\r\n  } else {\r\n    if (isNotesLoaded && (!noteExists || !hasNotes)) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  }\r\n  return (\r\n    <main className=\"note-page\">\r\n      <NoteNavigation />\r\n      {hasLoadedNotes ? <NoteSection /> : <div />}\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default NotePage;\r\n","D:\\Programming\\Java\\langbook-ui\\src\\pages\\notes\\navigation\\NoteNavigation.js",["75"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Plus } from \"react-bootstrap-icons\";\r\nimport { hasNotesSelector } from \"../../../state/notes/selectors\";\r\nimport { NoteNavigationTree } from \"./NoteNavigationTree\";\r\nimport { createNote } from \"../../../state/notes/notesSlice\";\r\n\r\nfunction NoteNavigation() {\r\n  const [isMouseOnItem, setIsMouseOnItem] = useState(false);\r\n  const [isPlusVisible, setIsPlusVisible] = useState(false);\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const hasNotes = useSelector(hasNotesSelector);\r\n\r\n  useEffect(() => {\r\n    if (isMouseOnItem) {\r\n      let timeoutId = setTimeout(() => {\r\n        setIsPlusVisible(true);\r\n      }, 200);\r\n      return () => clearTimeout(timeoutId);\r\n    }\r\n  }, [isMouseOnItem]);\r\n\r\n  function handleMouseEnter() {\r\n    setIsMouseOnItem(true);\r\n  }\r\n\r\n  function handleMouseLeave() {\r\n    setIsPlusVisible(false);\r\n    setIsMouseOnItem(false);\r\n  }\r\n\r\n  function handlePlusButtonClick() {\r\n    dispatch(createNote({ parentId: \"root\" }));\r\n    // dispatch(createNote({ parentId: \"root\" }))\r\n    //   .then(unwrapResult)\r\n    //   .then((note) => {\r\n    //     history.push(\"/notes/\" + note.id);\r\n    //   });\r\n  }\r\n\r\n  function handlePlusButtonMouseOver() {\r\n    if (!isPlusVisible) {\r\n      setIsPlusVisible(true);\r\n    }\r\n  }\r\n\r\n  function showIf(condition) {\r\n    return condition ? 1 : 0;\r\n  }\r\n\r\n  return (\r\n    <aside className=\"note-navigation\">\r\n      <Card>\r\n        <Card.Header\r\n          className=\"header\"\r\n          onMouseEnter={handleMouseEnter}\r\n          onMouseLeave={handleMouseLeave}\r\n        >\r\n          <span>Table of contents</span>\r\n          <button\r\n            onClick={handlePlusButtonClick}\r\n            onMouseOver={handlePlusButtonMouseOver}\r\n            className=\"action-button\"\r\n            style={{\r\n              opacity: showIf(isPlusVisible || !hasNotes),\r\n            }}\r\n          >\r\n            <Plus className=\"icon\" />\r\n          </button>\r\n        </Card.Header>\r\n        <Card.Body>\r\n          {!hasNotes ? (\r\n            <div className=\"navigation-no-item\">\r\n              There are no pages to show. Try adding some!\r\n            </div>\r\n          ) : (\r\n            <NoteNavigationTree />\r\n          )}\r\n        </Card.Body>\r\n      </Card>\r\n    </aside>\r\n  );\r\n}\r\n\r\nexport default NoteNavigation;\r\n","D:\\Programming\\Java\\langbook-ui\\src\\pages\\notes\\content\\NoteSection.js",[],"D:\\Programming\\Java\\langbook-ui\\src\\pages\\notes\\navigation\\NoteNavigationItem.js",["76","77","78"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport { ChevronDown, ChevronRight, Plus } from \"react-bootstrap-icons\";\r\nimport {\r\n  noteExpanded,\r\n  noteCollapsed,\r\n  createNote,\r\n} from \"../../../state/notes/notesSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nexport const NoteNavigationItem = (props) => {\r\n  const { selectedCategoryId, selectedNoteId } = useParams();\r\n  const { note, isDragging } = props;\r\n  const { onExpand, onCollapse } = props;\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const [isPlusVisible, setIsPlusVisible] = useState(false);\r\n  const [isMouseOnItem, setIsMouseOnItem] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (isMouseOnItem && !isDragging) {\r\n      let timeoutId = setTimeout(() => {\r\n        setIsPlusVisible(true);\r\n      }, 280);\r\n      return () => clearTimeout(timeoutId);\r\n    }\r\n  }, [isMouseOnItem, isDragging]);\r\n\r\n  function handleMouseLeave() {\r\n    setIsPlusVisible(false);\r\n    setIsMouseOnItem(false);\r\n  }\r\n\r\n  function handleMouseEnter() {\r\n    if (!isDragging) {\r\n      setIsMouseOnItem(true);\r\n    }\r\n  }\r\n\r\n  function handleExpandClick() {\r\n    dispatch(noteExpanded(note.id));\r\n  }\r\n\r\n  function handleCollapseClick() {\r\n    dispatch(noteCollapsed(note.id));\r\n  }\r\n\r\n  function handlePlusButtonClick() {\r\n    dispatch(createNote({ parentId: note.id }));\r\n    // dispatch(createNote({ parentId: note.id }))\r\n    //   .then(unwrapResult)\r\n    //   .then((note) => {\r\n    //     history.push(\"/notes/\" + note.id);\r\n    //   });\r\n  }\r\n\r\n  function hasSubNotes(note) {\r\n    return note.children?.length > 0;\r\n  }\r\n\r\n  function getTitleClass() {\r\n    return \"title\" + (note.id.toString() === selectedNoteId ? \" active\" : \"\");\r\n  }\r\n\r\n  function showIf(condition) {\r\n    return condition ? \"visible\" : \"hidden\";\r\n  }\r\n\r\n  function getIcon() {\r\n    if (hasSubNotes(note)) {\r\n      if (note.isExpanded) {\r\n        return (\r\n          <button\r\n            className=\"chevron-button\"\r\n            onClick={() => onCollapse(note.id)}\r\n          >\r\n            <ChevronDown className=\"icon\" />\r\n          </button>\r\n        );\r\n      } else {\r\n        return (\r\n          <button className=\"chevron-button\" onClick={() => onExpand(note.id)}>\r\n            <ChevronRight className=\"icon\" />\r\n          </button>\r\n        );\r\n      }\r\n    } else {\r\n      return <div className=\"chevron-button-placeholder\" />;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"navigation-item\"\r\n      onMouseEnter={handleMouseEnter}\r\n      onMouseLeave={handleMouseLeave}\r\n    >\r\n      {getIcon()}\r\n\r\n      <div className=\"title-area\">\r\n        <Link\r\n          className={getTitleClass()}\r\n          to={\"/categories/\" + selectedCategoryId + \"/notes/\" + note.id}\r\n        >\r\n          {note.data.title}\r\n        </Link>\r\n      </div>\r\n\r\n      <button\r\n        className=\"action-button\"\r\n        onClick={handlePlusButtonClick}\r\n        style={{\r\n          visibility: showIf(isPlusVisible && !isDragging),\r\n        }}\r\n      >\r\n        <Plus className=\"icon\" />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","D:\\Programming\\Java\\langbook-ui\\src\\pages\\notes\\content\\NoteModal.js",[],"D:\\Programming\\Java\\langbook-ui\\src\\pages\\notes\\navigation\\NoteNavigationTree.js",["79"],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":1,"column":17,"nodeType":"86","messageId":"87","endLine":1,"endColumn":26},{"ruleId":"84","severity":1,"message":"88","line":4,"column":10,"nodeType":"86","messageId":"87","endLine":4,"endColumn":21},{"ruleId":"84","severity":1,"message":"89","line":8,"column":7,"nodeType":"86","messageId":"87","endLine":8,"endColumn":17},{"ruleId":"84","severity":1,"message":"90","line":17,"column":7,"nodeType":"86","messageId":"87","endLine":17,"endColumn":22},{"ruleId":"84","severity":1,"message":"91","line":24,"column":7,"nodeType":"86","messageId":"87","endLine":24,"endColumn":17},{"ruleId":"92","severity":1,"message":"93","line":38,"column":6,"nodeType":"94","endLine":38,"endColumn":36,"suggestions":"95"},{"ruleId":"84","severity":1,"message":"96","line":13,"column":9,"nodeType":"86","messageId":"87","endLine":13,"endColumn":16},{"ruleId":"84","severity":1,"message":"96","line":15,"column":9,"nodeType":"86","messageId":"87","endLine":15,"endColumn":16},{"ruleId":"84","severity":1,"message":"97","line":41,"column":12,"nodeType":"86","messageId":"87","endLine":41,"endColumn":29},{"ruleId":"84","severity":1,"message":"98","line":45,"column":12,"nodeType":"86","messageId":"87","endLine":45,"endColumn":31},{"ruleId":"84","severity":1,"message":"99","line":6,"column":3,"nodeType":"86","messageId":"87","endLine":6,"endColumn":11},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useDispatch' is defined but never used.","'createNote' is assigned a value but never used.","'synchronizeNote' is assigned a value but never used.","'deleteNote' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'firstToShowCategoryId'. Either include it or remove the dependency array.","ArrayExpression",["102"],"'history' is assigned a value but never used.","'handleExpandClick' is defined but never used.","'handleCollapseClick' is defined but never used.","'moveNote' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"103","fix":"104"},"Update the dependencies array to be: [dispatch, firstToShowCategoryId, selectedCategoryId]",{"range":"105","text":"106"},[1470,1500],"[dispatch, firstToShowCategoryId, selectedCategoryId]"]