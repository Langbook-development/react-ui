[{"D:\\Programming\\Java\\langbook-ui\\src\\index.js":"1","D:\\Programming\\Java\\langbook-ui\\src\\App.js":"2","D:\\Programming\\Java\\langbook-ui\\src\\api\\noteApi.js":"3","D:\\Programming\\Java\\langbook-ui\\src\\api\\apiUtils.js":"4","D:\\Programming\\Java\\langbook-ui\\src\\state\\store.js":"5","D:\\Programming\\Java\\langbook-ui\\src\\state\\notes\\thunks.js":"6","D:\\Programming\\Java\\langbook-ui\\src\\state\\notes\\selectors.js":"7","D:\\Programming\\Java\\langbook-ui\\src\\state\\notes\\notesSlice.js":"8","D:\\Programming\\Java\\langbook-ui\\src\\state\\initialState.js":"9","D:\\Programming\\Java\\langbook-ui\\src\\pages\\notes\\NotePage.js":"10","D:\\Programming\\Java\\langbook-ui\\src\\pages\\notes\\navigation\\NoteNavigation.js":"11","D:\\Programming\\Java\\langbook-ui\\src\\pages\\notes\\content\\NoteSection.js":"12","D:\\Programming\\Java\\langbook-ui\\src\\pages\\notes\\navigation\\NoteNavigationItem.js":"13","D:\\Programming\\Java\\langbook-ui\\src\\pages\\notes\\content\\NoteModal.js":"14","D:\\Programming\\Java\\langbook-ui\\src\\pages\\notes\\navigation\\NoteNavigationTree.js":"15"},{"size":388,"mtime":1623527766008,"results":"16","hashOfConfig":"17"},{"size":654,"mtime":1624617662471,"results":"18","hashOfConfig":"17"},{"size":864,"mtime":1624618222241,"results":"19","hashOfConfig":"17"},{"size":603,"mtime":1616531929710,"results":"20","hashOfConfig":"17"},{"size":290,"mtime":1619351307638,"results":"21","hashOfConfig":"17"},{"size":864,"mtime":1624619468980,"results":"22","hashOfConfig":"17"},{"size":1397,"mtime":1624621149958,"results":"23","hashOfConfig":"17"},{"size":4697,"mtime":1624620343221,"results":"24","hashOfConfig":"17"},{"size":7014,"mtime":1624620235820,"results":"25","hashOfConfig":"17"},{"size":2010,"mtime":1624620479525,"results":"26","hashOfConfig":"17"},{"size":2405,"mtime":1624551713003,"results":"27","hashOfConfig":"17"},{"size":3584,"mtime":1624620884279,"results":"28","hashOfConfig":"17"},{"size":3022,"mtime":1624556245377,"results":"29","hashOfConfig":"17"},{"size":680,"mtime":1616616730433,"results":"30","hashOfConfig":"17"},{"size":1567,"mtime":1624617372171,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1mcudw",{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"D:\\Programming\\Java\\langbook-ui\\src\\index.js",[],["68","69"],"D:\\Programming\\Java\\langbook-ui\\src\\App.js",["70","71"],"import React, { useEffect } from \"react\";\nimport NotePage from \"./pages/notes/NotePage\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\n// import { getNotes } from \"./state/notes/thunks\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <header />\n        <Switch>\n          <Route\n            exact\n            path={[\n              \"/\",\n              \"/categories/:selectedCategoryId/notes/:selectedNoteId\",\n            ]}\n          >\n            <NotePage />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","D:\\Programming\\Java\\langbook-ui\\src\\api\\noteApi.js",[],"D:\\Programming\\Java\\langbook-ui\\src\\api\\apiUtils.js",[],"D:\\Programming\\Java\\langbook-ui\\src\\state\\store.js",[],"D:\\Programming\\Java\\langbook-ui\\src\\state\\notes\\thunks.js",["72","73","74","75"],"import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { NoteAPI } from \"../../api/noteApi\";\n\nexport const getNotes = createAsyncThunk(\"notes/get\", async (categoryId) => {\n  return await NoteAPI.getNotes(categoryId);\n});\n\nconst createNote = createAsyncThunk(\"notes/upsert\", async ({ parentId }) => {\n  const note = {\n    parentId: parentId,\n    title: \"Enter title here\",\n    content: \"Enter text here\",\n  };\n  return await NoteAPI.putNote(note);\n});\n\nconst synchronizeNote = createAsyncThunk(\n  \"notes/synchronize\",\n  async (note, _) => {\n    return await NoteAPI.putNote(note);\n  }\n);\n\nconst deleteNote = createAsyncThunk(\"notes/delete\", async (note) => {\n  return await NoteAPI.deleteNote(note);\n});\n\nconst synchronizeNoteMovement = createAsyncThunk(\n  \"notes/synchronizeMovement\",\n  async (request) => {\n    return await NoteAPI.moveNote(request);\n  }\n);\n","D:\\Programming\\Java\\langbook-ui\\src\\state\\notes\\selectors.js",[],"D:\\Programming\\Java\\langbook-ui\\src\\state\\notes\\notesSlice.js",[],"D:\\Programming\\Java\\langbook-ui\\src\\state\\initialState.js",[],"D:\\Programming\\Java\\langbook-ui\\src\\pages\\notes\\NotePage.js",["76"],"import React, { useEffect } from \"react\";\nimport NoteNavigation from \"./navigation/NoteNavigation\";\nimport NoteSection from \"./content/NoteSection\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect, useParams, useLocation } from \"react-router-dom\";\nimport {\n  firstToShowCategorySelector,\n  firstToShowNoteSelector,\n  hasNotesSelector,\n  isNotesLoadedSelector,\n  noteSelector,\n} from \"../../state/notes/selectors\";\nimport { noteExpanded } from \"../../state/notes/notesSlice\";\nimport { getNotes } from \"../../state/notes/thunks\";\n\nfunction NotePage() {\n  const { pathname } = useLocation();\n  const { selectedNoteId, selectedCategoryId } = useParams();\n  const isNotesLoaded = useSelector(isNotesLoadedSelector);\n  const hasNotes = useSelector(hasNotesSelector);\n  const note = useSelector(noteSelector(selectedNoteId));\n  const firstToShowCategoryId = useSelector(firstToShowCategorySelector);\n  const firstToShowNoteId = useSelector(firstToShowNoteSelector);\n  const dispatch = useDispatch();\n  const hasLoadedNotes = isNotesLoaded && hasNotes;\n  const noteExists = note !== undefined;\n\n  useEffect(() => {\n    if (isNotesLoaded && noteExists) {\n      dispatch(noteExpanded(note.data.parentId));\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [noteExists, isNotesLoaded]);\n\n  useEffect(() => {\n    if (firstToShowCategoryId) {\n      dispatch(getNotes(firstToShowCategoryId));\n    }\n  }, [dispatch, selectedCategoryId]);\n\n  if (pathname === \"/\") {\n    if (isNotesLoaded && hasNotes) {\n      return (\n        <Redirect\n          to={\n            \"/categories/\" +\n            firstToShowCategoryId +\n            \"/notes/\" +\n            firstToShowNoteId\n          }\n        />\n      );\n    }\n  } else {\n    if (isNotesLoaded && (!noteExists || !hasNotes)) {\n      return <Redirect to=\"/\" />;\n    }\n  }\n  return (\n    <main className=\"note-page\">\n      <NoteNavigation />\n      {hasLoadedNotes ? <NoteSection /> : <div />}\n    </main>\n  );\n}\n\nexport default NotePage;\n","D:\\Programming\\Java\\langbook-ui\\src\\pages\\notes\\navigation\\NoteNavigation.js",["77"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Card } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport { Plus } from \"react-bootstrap-icons\";\nimport { hasNotesSelector } from \"../../../state/notes/selectors\";\nimport { NoteNavigationTree } from \"./NoteNavigationTree\";\nimport { createNote } from \"../../../state/notes/notesSlice\";\n\nfunction NoteNavigation() {\n  const [isMouseOnItem, setIsMouseOnItem] = useState(false);\n  const [isPlusVisible, setIsPlusVisible] = useState(false);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const hasNotes = useSelector(hasNotesSelector);\n\n  useEffect(() => {\n    if (isMouseOnItem) {\n      let timeoutId = setTimeout(() => {\n        setIsPlusVisible(true);\n      }, 200);\n      return () => clearTimeout(timeoutId);\n    }\n  }, [isMouseOnItem]);\n\n  function handleMouseEnter() {\n    setIsMouseOnItem(true);\n  }\n\n  function handleMouseLeave() {\n    setIsPlusVisible(false);\n    setIsMouseOnItem(false);\n  }\n\n  function handlePlusButtonClick() {\n    dispatch(createNote({ parentId: \"root\" }));\n    // dispatch(createNote({ parentId: \"root\" }))\n    //   .then(unwrapResult)\n    //   .then((note) => {\n    //     history.push(\"/notes/\" + note.id);\n    //   });\n  }\n\n  function handlePlusButtonMouseOver() {\n    if (!isPlusVisible) {\n      setIsPlusVisible(true);\n    }\n  }\n\n  function showIf(condition) {\n    return condition ? 1 : 0;\n  }\n\n  return (\n    <aside className=\"note-navigation\">\n      <Card>\n        <Card.Header\n          className=\"header\"\n          onMouseEnter={handleMouseEnter}\n          onMouseLeave={handleMouseLeave}\n        >\n          <span>Table of contents</span>\n          <button\n            onClick={handlePlusButtonClick}\n            onMouseOver={handlePlusButtonMouseOver}\n            className=\"action-button\"\n            style={{\n              opacity: showIf(isPlusVisible || !hasNotes),\n            }}\n          >\n            <Plus className=\"icon\" />\n          </button>\n        </Card.Header>\n        <Card.Body>\n          {!hasNotes ? (\n            <div className=\"navigation-no-item\">\n              There are no pages to show. Try adding some!\n            </div>\n          ) : (\n            <NoteNavigationTree />\n          )}\n        </Card.Body>\n      </Card>\n    </aside>\n  );\n}\n\nexport default NoteNavigation;\n","D:\\Programming\\Java\\langbook-ui\\src\\pages\\notes\\content\\NoteSection.js",[],"D:\\Programming\\Java\\langbook-ui\\src\\pages\\notes\\navigation\\NoteNavigationItem.js",["78","79","80"],"import React, { useEffect, useState } from \"react\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { ChevronDown, ChevronRight, Plus } from \"react-bootstrap-icons\";\nimport {\n  noteExpanded,\n  noteCollapsed,\n  createNote,\n} from \"../../../state/notes/notesSlice\";\nimport { useDispatch } from \"react-redux\";\n\nexport const NoteNavigationItem = (props) => {\n  const { selectedCategoryId, selectedNoteId } = useParams();\n  const { note, isDragging } = props;\n  const { onExpand, onCollapse } = props;\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const [isPlusVisible, setIsPlusVisible] = useState(false);\n  const [isMouseOnItem, setIsMouseOnItem] = useState(false);\n\n  useEffect(() => {\n    if (isMouseOnItem && !isDragging) {\n      let timeoutId = setTimeout(() => {\n        setIsPlusVisible(true);\n      }, 280);\n      return () => clearTimeout(timeoutId);\n    }\n  }, [isMouseOnItem, isDragging]);\n\n  function handleMouseLeave() {\n    setIsPlusVisible(false);\n    setIsMouseOnItem(false);\n  }\n\n  function handleMouseEnter() {\n    if (!isDragging) {\n      setIsMouseOnItem(true);\n    }\n  }\n\n  function handleExpandClick() {\n    dispatch(noteExpanded(note.id));\n  }\n\n  function handleCollapseClick() {\n    dispatch(noteCollapsed(note.id));\n  }\n\n  function handlePlusButtonClick() {\n    dispatch(createNote({ parentId: note.id }));\n    // dispatch(createNote({ parentId: note.id }))\n    //   .then(unwrapResult)\n    //   .then((note) => {\n    //     history.push(\"/notes/\" + note.id);\n    //   });\n  }\n\n  function hasSubNotes(note) {\n    return note.children?.length > 0;\n  }\n\n  function getTitleClass() {\n    return \"title\" + (note.id.toString() === selectedNoteId ? \" active\" : \"\");\n  }\n\n  function showIf(condition) {\n    return condition ? \"visible\" : \"hidden\";\n  }\n\n  function getIcon() {\n    if (hasSubNotes(note)) {\n      if (note.isExpanded) {\n        return (\n          <button\n            className=\"chevron-button\"\n            onClick={() => onCollapse(note.id)}\n          >\n            <ChevronDown className=\"icon\" />\n          </button>\n        );\n      } else {\n        return (\n          <button className=\"chevron-button\" onClick={() => onExpand(note.id)}>\n            <ChevronRight className=\"icon\" />\n          </button>\n        );\n      }\n    } else {\n      return <div className=\"chevron-button-placeholder\" />;\n    }\n  }\n\n  return (\n    <div\n      className=\"navigation-item\"\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n    >\n      {getIcon()}\n\n      <div className=\"title-area\">\n        <Link\n          className={getTitleClass()}\n          to={\"/categories/\" + selectedCategoryId + \"/notes/\" + note.id}\n        >\n          {note.data.title}\n        </Link>\n      </div>\n\n      <button\n        className=\"action-button\"\n        onClick={handlePlusButtonClick}\n        style={{\n          visibility: showIf(isPlusVisible && !isDragging),\n        }}\n      >\n        <Plus className=\"icon\" />\n      </button>\n    </div>\n  );\n};\n","D:\\Programming\\Java\\langbook-ui\\src\\pages\\notes\\content\\NoteModal.js",[],"D:\\Programming\\Java\\langbook-ui\\src\\pages\\notes\\navigation\\NoteNavigationTree.js",[],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":1,"column":17,"nodeType":"87","messageId":"88","endLine":1,"endColumn":26},{"ruleId":"85","severity":1,"message":"89","line":4,"column":10,"nodeType":"87","messageId":"88","endLine":4,"endColumn":21},{"ruleId":"85","severity":1,"message":"90","line":8,"column":7,"nodeType":"87","messageId":"88","endLine":8,"endColumn":17},{"ruleId":"85","severity":1,"message":"91","line":17,"column":7,"nodeType":"87","messageId":"88","endLine":17,"endColumn":22},{"ruleId":"85","severity":1,"message":"92","line":24,"column":7,"nodeType":"87","messageId":"88","endLine":24,"endColumn":17},{"ruleId":"85","severity":1,"message":"93","line":28,"column":7,"nodeType":"87","messageId":"88","endLine":28,"endColumn":30},{"ruleId":"94","severity":1,"message":"95","line":38,"column":6,"nodeType":"96","endLine":38,"endColumn":36,"suggestions":"97"},{"ruleId":"85","severity":1,"message":"98","line":13,"column":9,"nodeType":"87","messageId":"88","endLine":13,"endColumn":16},{"ruleId":"85","severity":1,"message":"98","line":15,"column":9,"nodeType":"87","messageId":"88","endLine":15,"endColumn":16},{"ruleId":"85","severity":1,"message":"99","line":41,"column":12,"nodeType":"87","messageId":"88","endLine":41,"endColumn":29},{"ruleId":"85","severity":1,"message":"100","line":45,"column":12,"nodeType":"87","messageId":"88","endLine":45,"endColumn":31},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useDispatch' is defined but never used.","'createNote' is assigned a value but never used.","'synchronizeNote' is assigned a value but never used.","'deleteNote' is assigned a value but never used.","'synchronizeNoteMovement' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'firstToShowCategoryId'. Either include it or remove the dependency array.","ArrayExpression",["103"],"'history' is assigned a value but never used.","'handleExpandClick' is defined but never used.","'handleCollapseClick' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"104","fix":"105"},"Update the dependencies array to be: [dispatch, firstToShowCategoryId, selectedCategoryId]",{"range":"106","text":"107"},[1433,1463],"[dispatch, firstToShowCategoryId, selectedCategoryId]"]